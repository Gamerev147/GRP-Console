#define function_execute
var i=1,a;a[0]=argument[0];if is_string(a[0]){switch a[0]{
case"choose":a[0]=Choose;break;
case"random":a[0]=Random;break;
case"random_range":a[0]=Random_range;break;
case"irandom":a[0]=Irandom;break;
case"irandom_range":a[0]=Irandom_range;break;
case"arccos":a[0]=Arccos;break;
case"arcsin":a[0]=Arcsin;break;
case"arctan":a[0]=Arctan;break;
case"arctan2":a[0]=Arctan2;break;
case"sin":a[0]=Sin;break;
case"tan":a[0]=Tan;break;
case"cos":a[0]=Cos;break;
case"darccos":a[0]=Darccos;break;
case"darcsin":a[0]=Darcsin;break;
case"darctan":a[0]=Darctan;break;
case"darctan2":a[0]=Darctan2;break;
case"dsin":a[0]=Dsin;break;
case"dtan":a[0]=Dtan;break;
case"dcos":a[0]=Dcos;break;
case"degtorad":a[0]=Degtorad;break;
case"radtodeg":a[0]=Radtodeg;break;
case"lengthdir_x":a[0]=Lengthdir_x;break;
case"lengthdir_y":a[0]=Lengthdir_y;break;
case"round":a[0]=Round;break;
case"floor":a[0]=Floor;break;
case"frac":a[0]=Frac;break;
case"abs":a[0]=Abs;break;
case"sign":a[0]=Sign;break;
case"ceil":a[0]=Ceil;break;
case"max":a[0]=Max;break;
case"mean":a[0]=Mean;break;
case"median":a[0]=Median;break;
case"min":a[0]=Min;break;
case"lerp":a[0]=Lerp;break;
case"clamp":a[0]=Clamp;break;
case"exp":a[0]=Exp;break;
case"ln":a[0]=Ln;break;
case"power":a[0]=Power;break;
case"sqr":a[0]=Sqr;break;
case"sqrt":a[0]=Sqrt;break;
case"log2":a[0]=Log2;break;
case"log10":a[0]=Log10;break;
case"logn":a[0]=Logn;break;
case"int64":a[0]=Int64;break;
case"ansi_char":a[0]=Ansi_char;break;
case"chr":a[0]=Chr;break;
case"ord":a[0]=Ord;break;
case"real":a[0]=Real;break;
case"is_string":a[0]=Is_string;break;
case"string":a[0]=String;break;
case"string_byte_at":a[0]=String_byte_at;break;
case"string_byte_length":a[0]=String_byte_length;break;
case"string_set_byte_at":a[0]=String_set_byte_at;break;
case"string_char_at":a[0]=String_char_at;break;
case"string_ord_at":a[0]=String_ord_at;break;
case"string_copy":a[0]=String_copy;break;
case"string_count":a[0]=String_count;break;
case"string_delete":a[0]=String_delete;break;
case"string_digits":a[0]=String_digits;break;
case"string_format":a[0]=String_format;break;
case"string_insert":a[0]=String_insert;break;
case"string_length":a[0]=String_length;break;
case"string_letters":a[0]=String_letters;break;
case"string_lettersdigits":a[0]=String_lettersdigits;break;
case"string_lower":a[0]=String_lower;break;
case"string_pos":a[0]=String_pos;break;
case"string_repeat":a[0]=String_repeat;break;
case"string_replace":a[0]=String_replace;break;
case"string_replace_all":a[0]=String_replace_all;break;
case"string_upper":a[0]=String_upper;break;
case"string_height":a[0]=String_height;break;
case"string_height_ext":a[0]=String_height_ext;break;
case"string_width":a[0]=String_width;break;
case"string_width_ext":a[0]=String_width_ext;break;
case"draw_arrow":a[0]=Draw_arrow;break;
case"draw_circle":a[0]=Draw_circle;break;
case"draw_circle_colour":a[0]=Draw_circle_colour;break;
case"draw_ellipse":a[0]=Draw_ellipse;break;
case"draw_ellipse_colour":a[0]=Draw_ellipse_colour;break;
case"draw_line":a[0]=Draw_line;break;
case"draw_line_colour":a[0]=Draw_line_colour;break;
case"draw_line_width":a[0]=Draw_line_width;break;
case"draw_line_width_colour":a[0]=Draw_line_width_colour;break;
case"draw_point":a[0]=Draw_point;break;
case"draw_point_colour":a[0]=Draw_point_colour;break;
case"draw_rectangle":a[0]=Draw_rectangle;break;
case"draw_rectangle_colour":a[0]=Draw_rectangle_colour;break;
case"draw_roundrect":a[0]=Draw_roundrect;break;
case"draw_roundrect_colour":a[0]=Draw_roundrect_colour;break;
case"draw_roundrect_ext":a[0]=Draw_roundrect_ext;break;
case"draw_roundrect_colour_ext":a[0]=Draw_roundrect_colour_ext;break;
case"draw_triangle":a[0]=Draw_triangle;break;
case"draw_triangle_colour":a[0]=Draw_triangle_colour;break;
case"draw_text":a[0]=Draw_text;break;
case"draw_text_ext":a[0]=Draw_text_ext;break;
case"draw_text_colour":a[0]=Draw_text_colour;break;
case"draw_text_transformed":a[0]=Draw_text_transformed;break;
case"draw_text_ext_colour":a[0]=Draw_text_ext_colour;break;
case"draw_text_ext_transformed":a[0]=Draw_text_ext_transformed;break;
case"draw_text_transformed_colour":a[0]=Draw_text_transformed_colour;break;
case"draw_text_ext_transformed_colour":a[0]=Draw_text_ext_transformed_colour;break;
case"show_debug_message":a[0]=Show_debug_message;break;
case"show_message":a[0]=Show_message;break;
case"show_message_async":a[0]=Show_message_async;break;
case"show_question":a[0]=Show_question;break;
case"show_question_async":a[0]=Show_question_async;break;
case"get_integer":a[0]=Get_integer;break;
case"get_integer_async":a[0]=Get_integer_async;break;
case"get_string":a[0]=Get_string;break;
case"get_string_async":a[0]=Get_string_async;break;
case"event_perform":a[0]=Event_perform;break;
case"event_perform_object":a[0]=Event_perform_object;break;
case"event_user":a[0]=Event_user;break;
case"object_exists":a[0]=Object_exists;break;
case"object_get_depth":a[0]=Object_get_depth;break;
case"object_get_mask":a[0]=Object_get_mask;break;
case"object_get_name":a[0]=Object_get_name;break;
case"object_get_parent":a[0]=Object_get_parent;break;
case"object_get_persistent":a[0]=Object_get_persistent;break;
case"object_get_solid":a[0]=Object_get_solid;break;
case"object_get_sprite":a[0]=Object_get_sprite;break;
case"object_get_visible":a[0]=Object_get_visible;break;
case"object_get_physics":a[0]=Object_get_physics;break;
case"object_is_ancestor":a[0]=Object_is_ancestor;break;
case"object_set_depth":a[0]=Object_set_depth;break;
case"object_set_mask":a[0]=Object_set_mask;break;
case"object_set_persistent":a[0]=Object_set_persistent;break;
case"object_set_solid":a[0]=Object_set_solid;break;
case"object_set_sprite":a[0]=Object_set_sprite;break;
case"object_set_visible":a[0]=Object_set_visible;break;
case"instance_change":a[0]=Instance_change;break;
case"instance_copy":a[0]=Instance_copy;break;
case"instance_create":a[0]=Instance_create;break;
case"instance_destroy":a[0]=Instance_destroy;break;
case"instance_exists":a[0]=Instance_exists;break;
case"instance_find":a[0]=Instance_find;break;
case"instance_furthest":a[0]=Instance_furthest;break;
case"instance_nearest":a[0]=Instance_nearest;break;
case"instance_number":a[0]=Instance_number;break;
case"instance_place":a[0]=Instance_place;break;
case"instance_position":a[0]=Instance_position;break;
case"display_reset":a[0]=Display_reset;break;
case"display_get_height":a[0]=Display_get_height;break;
case"display_get_width":a[0]=Display_get_width;break;
case"display_get_orientation":a[0]=Display_get_orientation;break;
case"display_get_dpi_x":a[0]=Display_get_dpi_x;break;
case"display_get_dpi_y":a[0]=Display_get_dpi_y;break;
case"display_set_gui_size":a[0]=Display_set_gui_size;break;
case"display_set_gui_maximise":a[0]=Display_set_gui_maximise;break;
case"display_get_gui_width":a[0]=Display_get_gui_width;break;
case"display_get_gui_height":a[0]=Display_get_gui_height;break;
case"display_set_windows_vertex_buffer_method":a[0]=Display_set_windows_vertex_buffer_method;break;
case"display_set_windows_alternate_sync":a[0]=Display_set_windows_alternate_sync;break;
case"display_get_windows_vertex_buffer_method":a[0]=Display_get_windows_vertex_buffer_method;break;
case"display_get_windows_alternate_sync":a[0]=Display_get_windows_alternate_sync;break;
case"display_mouse_get_x":a[0]=Display_mouse_get_x;break;
case"display_mouse_get_y":a[0]=Display_mouse_get_y;break;
case"display_mouse_set":a[0]=Display_mouse_set;break;
case"window_center":a[0]=Window_center;break;
case"window_handle":a[0]=Window_handle;break;
case"window_get_caption":a[0]=Window_get_caption;break;
case"window_get_colour":a[0]=Window_get_colour;break;
case"window_get_fullscreen":a[0]=Window_get_fullscreen;break;
case"window_get_height":a[0]=Window_get_height;break;
case"window_get_width":a[0]=Window_get_width;break;
case"window_get_x":a[0]=Window_get_x;break;
case"window_get_y":a[0]=Window_get_y;break;
case"window_get_cursor":a[0]=Window_get_cursor;break;
case"window_get_visible_rects":a[0]=Window_get_visible_rects;break;
case"window_mouse_get_x":a[0]=Window_mouse_get_x;break;
case"window_mouse_get_y":a[0]=Window_mouse_get_y;break;
case"window_mouse_set":a[0]=Window_mouse_set;break;
case"window_set_caption":a[0]=Window_set_caption;break;
case"window_set_colour":a[0]=Window_set_colour;break;
case"window_set_fullscreen":a[0]=Window_set_fullscreen;break;
case"window_set_position":a[0]=Window_set_position;break;
case"window_set_size":a[0]=Window_set_size;break;
case"window_set_rectangle":a[0]=Window_set_rectangle;break;
case"window_set_cursor":a[0]=Window_set_cursor;break;
case"window_set_min_width":a[0]=Window_set_min_width;break;
case"window_set_max_width":a[0]=Window_set_max_width;break;
case"window_set_min_height":a[0]=Window_set_min_height;break;
case"window_set_max_height":a[0]=Window_set_max_height;break;
case"window_has_focus":a[0]=Window_has_focus;break;
case"window_device":a[0]=Window_device;break;}}
if is_real(a[0]){for(;i<argument_count;i++){a[i]=argument[i];}if a[0]<0{switch a[0]{
case Choose:switch argument_count-1{
case  1:return choose(a[1]);break;
case  2:return choose(a[1],a[2]);break;
case  3:return choose(a[1],a[2],a[3]);break;
case  4:return choose(a[1],a[2],a[3],a[4]);break;
case  5:return choose(a[1],a[2],a[3],a[4],a[5]);break;
case  6:return choose(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  7:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  8:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case  9:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 10:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 11:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 12:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 13:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 14:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 15:return choose(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}break;
case Random:return random(a[1]);break;
case Random_range:return random_range(a[1],a[2]);break;
case Irandom:return irandom(a[1]);break;
case Irandom_range:return irandom_range(a[1],a[2]);break;
case Arccos:return arccos(a[1]);break;
case Arcsin:return arcsin(a[1]);break;
case Arctan:return arctan(a[1]);break;
case Arctan2:return arctan2(a[1],a[2]);break;
case Sin:return sin(a[1]);break;
case Tan:return tan(a[1]);break;
case Cos:return cos(a[1]);break;
case Darccos:return darccos(a[1]);break;
case Darcsin:return darcsin(a[1]);break;
case Darctan:return darctan(a[1]);break;
case Darctan2:return darctan2(a[1],a[2]);break;
case Dsin:return dsin(a[1]);break;
case Dtan:return dtan(a[1]);break;
case Dcos:return dcos(a[1]);break;
case Degtorad:return degtorad(a[1]);break;
case Radtodeg:return radtodeg(a[1]);break;
case Lengthdir_x:return lengthdir_x(a[1],a[2]);break;
case Lengthdir_y:return lengthdir_y(a[1],a[2]);break;
case Round:return round(a[1]);break;
case Floor:return floor(a[1]);break;
case Frac:return frac(a[1]);break;
case Abs:return abs(a[1]);break;
case Sign:return sign(a[1]);break;
case Ceil:return ceil(a[1]);break;
case Max:switch argument_count-1{
case  1:return max(a[1]);break;
case  2:return max(a[1],a[2]);break;
case  3:return max(a[1],a[2],a[3]);break;
case  4:return max(a[1],a[2],a[3],a[4]);break;
case  5:return max(a[1],a[2],a[3],a[4],a[5]);break;
case  6:return max(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  7:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  8:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case  9:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 10:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 11:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 12:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 13:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 14:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 15:return max(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}break;
case Mean:switch argument_count-1{
case  1:return mean(a[1]);break;
case  2:return mean(a[1],a[2]);break;
case  3:return mean(a[1],a[2],a[3]);break;
case  4:return mean(a[1],a[2],a[3],a[4]);break;
case  5:return mean(a[1],a[2],a[3],a[4],a[5]);break;
case  6:return mean(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  7:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  8:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case  9:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 10:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 11:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 12:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 13:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 14:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 15:return mean(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}break;
case Median:switch argument_count-1{
case  1:return median(a[1]);break;
case  2:return median(a[1],a[2]);break;
case  3:return median(a[1],a[2],a[3]);break;
case  4:return median(a[1],a[2],a[3],a[4]);break;
case  5:return median(a[1],a[2],a[3],a[4],a[5]);break;
case  6:return median(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  7:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  8:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case  9:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 10:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 11:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 12:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 13:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 14:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 15:return median(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}break;
case Min:switch argument_count-1{
case  1:return min(a[1]);break;
case  2:return min(a[1],a[2]);break;
case  3:return min(a[1],a[2],a[3]);break;
case  4:return min(a[1],a[2],a[3],a[4]);break;
case  5:return min(a[1],a[2],a[3],a[4],a[5]);break;
case  6:return min(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  7:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  8:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case  9:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 10:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 11:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 12:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 13:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 14:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 15:return min(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}break;
case Lerp:return lerp(a[1],a[2],a[3]);break;
case Clamp:return clamp(a[1],a[2],a[3]);break;
case Exp:return exp(a[1]);break;
case Ln:return ln(a[1]);break;
case Power:return power(a[1],a[2]);break;
case Sqr:return sqr(a[1]);break;
case Sqrt:return sqrt(a[1]);break;
case Log2:return log2(a[1]);break;
case Log10:return log10(a[1]);break;
case Logn:return logn(a[1],a[2]);break;
case Int64:return int64(a[1]);break;
case Ansi_char:return ansi_char(a[1]);break;
case Chr:return chr(a[1]);break;
case Ord:return ord(a[1]);break;
case Real:return real(a[1]);break;
case Is_string:return is_string(a[1]);break;
case String:return string(a[1]);break;
case String_byte_at:return string_byte_at(a[1],a[2]);break;
case String_byte_length:return string_byte_length(a[1]);break;
case String_set_byte_at:return string_set_byte_at(a[1],a[2],a[3]);break;
case String_char_at:return string_char_at(a[1],a[2]);break;
case String_ord_at:return string_ord_at(a[1],a[2]);break;
case String_copy:return string_copy(a[1],a[2],a[3]);break;
case String_count:return string_count(a[1],a[2]);break;
case String_delete:return string_delete(a[1],a[2],a[3]);break;
case String_digits:return string_digits(a[1]);break;
case String_format:return string_format(a[1],a[2],a[3]);break;
case String_insert:return string_insert(a[1],a[2],a[3]);break;
case String_length:return string_length(a[1]);break;
case String_letters:return string_letters(a[1]);break;
case String_lettersdigits:return string_lettersdigits(a[1]);break;
case String_lower:return string_lower(a[1]);break;
case String_pos:return string_pos(a[1],a[2]);break;
case String_repeat:return string_repeat(a[1],a[2]);break;
case String_replace:return string_replace(a[1],a[2],a[3]);break;
case String_replace_all:return string_replace_all(a[1],a[2],a[3]);break;
case String_upper:return string_upper(a[1]);break;
case String_height:return string_height(string_hash_to_newline(a[1]));break;
case String_height_ext:return string_height_ext(string_hash_to_newline(a[1]),a[2],a[3]);break;
case String_width:return string_width(string_hash_to_newline(a[1]));break;
case String_width_ext:return string_width_ext(string_hash_to_newline(a[1]),a[2],a[3]);break;
case Draw_arrow:draw_arrow(a[1],a[2],a[3],a[4],a[5]);break;
case Draw_circle:draw_circle(a[1],a[2],a[3],a[4]);break;
case Draw_circle_colour:draw_circle_colour(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case Draw_ellipse:draw_ellipse(a[1],a[2],a[3],a[4],a[5]);break;
case Draw_ellipse_colour:draw_ellipse_colour(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case Draw_line:draw_line(a[1],a[2],a[3],a[4]);break;
case Draw_line_colour:draw_line_colour(a[1],a[2],a[3],a[4],a[5],a[6]);break;
case Draw_line_width:draw_line_width(a[1],a[2],a[3],a[4],a[5]);break;
case Draw_line_width_colour:draw_line_width_colour(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case Draw_point:draw_point(a[1],a[2]);break;
case Draw_point_colour:draw_point_colour(a[1],a[2],a[3]);break;
case Draw_rectangle:draw_rectangle(a[1],a[2],a[3],a[4],a[5]);break;
case Draw_rectangle_colour:draw_rectangle_colour(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case Draw_roundrect:draw_roundrect(a[1],a[2],a[3],a[4],a[5]);break;
case Draw_roundrect_colour:draw_roundrect_colour(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case Draw_roundrect_ext:draw_roundrect_ext(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case Draw_roundrect_colour_ext:draw_roundrect_colour_ext(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case Draw_triangle:draw_triangle(a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case Draw_triangle_colour:draw_triangle_colour(a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case Draw_text:draw_text(a[1],a[2],string_hash_to_newline(string(a[3])));break;
case Draw_text_ext:draw_text_ext(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5]);break;
case Draw_text_colour:draw_text_colour(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6],a[7],a[8]);break;
case Draw_text_transformed:draw_text_transformed(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6]);break;
case Draw_text_ext_colour:draw_text_ext_colour(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case Draw_text_ext_transformed:draw_text_ext_transformed(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6],a[7],a[8]);break;
case Draw_text_transformed_colour:draw_text_transformed_colour(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case Draw_text_ext_transformed_colour:draw_text_ext_transformed_colour(a[1],a[2],string_hash_to_newline(a[3]),a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case Show_debug_message:show_debug_message(a[1]);break;
case Show_message:show_message(a[1]);break;
case Show_message_async:return show_message_async(a[1]);break;
case Show_question:return show_question(a[1]);break;
case Show_question_async:return show_question_async(a[1]);break;
case Get_integer:return get_integer(a[1],a[2]);break;
case Get_integer_async:return get_integer_async(a[1],a[2]);break;
case Get_string:return get_string(a[1],a[2]);break;
case Get_string_async:return get_string_async(a[1],a[2]);break;
case Event_perform:event_perform(a[1],a[2]);break;
case Event_perform_object:event_perform_object(a[1],a[2],a[3]);break;
case Event_user:event_user(a[1]);break;
case Object_exists:return object_exists(a[1]);break;
case Object_get_depth:return object_get_depth(a[1]);break;
case Object_get_mask:return object_get_mask(a[1]);break;
case Object_get_name:return object_get_name(a[1]);break;
case Object_get_parent:return object_get_parent(a[1]);break;
case Object_get_persistent:return object_get_persistent(a[1]);break;
case Object_get_solid:return object_get_solid(a[1]);break;
case Object_get_sprite:return object_get_sprite(a[1]);break;
case Object_get_visible:return object_get_visible(a[1]);break;
case Object_get_physics:return object_get_physics(a[1]);break;
case Object_is_ancestor:return object_is_ancestor(a[1],a[2]);break;
case Object_set_depth:object_set_depth(a[1],a[2]);break;
case Object_set_mask:object_set_mask(a[1],a[2]);break;
case Object_set_persistent:object_set_persistent(a[1],a[2]);break;
case Object_set_solid:object_set_solid(a[1],a[2]);break;
case Object_set_sprite:object_set_sprite(a[1],a[2]);break;
case Object_set_visible:object_set_visible(a[1],a[2]);break;
case Instance_change:instance_change(a[1],a[2]);break;
case Instance_copy:return instance_copy(a[1]);break;
case Instance_create:return instance_create(a[1],a[2],a[3]);break;
case Instance_destroy:instance_destroy();break;
case Instance_exists:return instance_exists(a[1]);break;
case Instance_find:return instance_find(a[1],a[2]);break;
case Instance_furthest:return instance_furthest(a[1],a[2],a[3]);break;
case Instance_nearest:return instance_nearest(a[1],a[2],a[3]);break;
case Instance_number:return instance_number(a[1]);break;
case Instance_place:return instance_place(a[1],a[2],a[3]);break;
case Instance_position:return instance_position(a[1],a[2],a[3]);break;
case Display_reset:return display_reset(a[1],a[2]);break;
case Display_get_height:return display_get_height();break;
case Display_get_width:return display_get_width();break;
case Display_get_orientation:return display_get_orientation();break;
case Display_get_dpi_x:return display_get_dpi_x();break;
case Display_get_dpi_y:return display_get_dpi_y();break;
case Display_set_gui_size:display_set_gui_size(a[1],a[2]);break;
case Display_set_gui_maximise:switch argument_count-1{
case 1:display_set_gui_maximise(a[1]);break;
case 2:display_set_gui_maximise(a[1],a[2]);break;
case 3:display_set_gui_maximise(a[1],a[2],a[3]);break;
case 4:display_set_gui_maximise(a[1],a[2],a[3],a[4]);break;}break;
case Display_get_gui_width:return display_get_gui_width();break;
case Display_get_gui_height:return display_get_gui_height();break;
case Display_set_windows_vertex_buffer_method:display_set_windows_vertex_buffer_method(a[1]);break;
case Display_set_windows_alternate_sync:display_set_windows_alternate_sync(a[1]);break;
case Display_get_windows_vertex_buffer_method:return display_get_windows_vertex_buffer_method();break;
case Display_get_windows_alternate_sync:return display_get_windows_alternate_sync();break;
case Display_mouse_get_x:return display_mouse_get_x();break;
case Display_mouse_get_y:return display_mouse_get_y();break;
case Display_mouse_set:display_mouse_set(a[1],a[2]);break;
case Window_center:window_center();break;
case Window_handle:return window_handle();break;
case Window_get_caption:return window_get_caption();break;///WHAT?
case Window_get_colour:return window_get_colour();break;///WHAT
case Window_get_fullscreen:return window_get_fullscreen();break;
case Window_get_height:return window_get_height();break;
case Window_get_width:return window_get_width();break;
case Window_get_x:return window_get_x();break;
case Window_get_y:return window_get_y();break;
case Window_get_cursor:return window_get_cursor();break;
case Window_get_visible_rects:return window_get_visible_rects(a[1],a[2],a[3],a[4]);break;
case Window_mouse_get_x:return window_mouse_get_x();break;
case Window_mouse_get_y:return window_mouse_get_y();break;
case Window_mouse_set:window_mouse_set(a[1],a[2]);break;
case Window_set_caption:window_set_caption(a[1]);break;
case Window_set_colour:window_set_colour(a[1]);break;
case Window_set_fullscreen:window_set_fullscreen(a[1]);break;
case Window_set_position:window_set_position(a[1],a[2]);break;
case Window_set_size:window_set_size(a[1],a[2]);break;
case Window_set_rectangle:window_set_rectangle(a[1],a[2],a[3],a[4]);
case Window_set_cursor:window_set_cursor(a[1]);break;
case Window_set_min_width:window_set_min_width(a[1]);break;
case Window_set_max_width:window_set_max_width(a[1]);break;
case Window_set_min_height:window_set_min_height(a[1]);break;
case Window_set_max_height:window_set_max_height(a[1]);break;
case Window_has_focus:return window_has_focus();break;
case Window_device:return window_device();break;}}
else{switch argument_count{
case  1:return script_execute(a[0]);break;
case  2:return script_execute(a[0],a[1]);break;
case  3:return script_execute(a[0],a[1],a[2]);break;
case  4:return script_execute(a[0],a[1],a[2],a[3]);break;
case  5:return script_execute(a[0],a[1],a[2],a[3],a[4]);break;
case  6:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5]);break;
case  7:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6]);break;
case  8:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7]);break;
case  9:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]);break;
case 10:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]);break;
case 11:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10]);break;
case 12:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11]);break;
case 13:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12]);break;
case 14:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13]);break;
case 15:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14]);break;
case 16:return script_execute(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);break;}}}

